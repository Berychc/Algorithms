package org.example.aglorithms;

public class AlgorithmsLogic {

    /**
     * Когда белки собираются на вечеринку, они любят сигары.
     * Вечеринка белок успешна, когда количество сигар составляет от 40 до 60 включительно.
     * Если только это не выходные, в этом случае нет верхней границы количества сигар.
     * Верните true, если вечеринка с заданными значениями успешна, или false в противном случае.
     * cigarParty(30, false) → false
     * cigarParty(50, false) → true
     * cigarParty(70, true) → true
     * @param cigars
     * @param isWeekend
     * @return
     */
    public boolean cigarParty(int cigars, boolean isWeekend) {
        if (!isWeekend) {
            return cigars >= 40 && cigars <= 60;
        } else {
            return  cigars >= 40;
        }
    }

    /**
     * Вы едете слишком быстро, и вас останавливает полицейский.
     * Напишите код для вычисления результата, закодированного как значение int:
     * 0=нет штрафа,
     * 1=маленький штраф,
     * 2=большой штраф.
     * Если скорость 60 или меньше, результат равен 0.
     * Если скорость от 61 до 80 включительно, результат равен 1. Если скорость 81 или больше, результат равен 2.
     * Если это не ваш день рождения — в этот день ваша скорость может быть на 5 выше во всех случаях.
     * <p>
     * caughtSpeeding(60, false) → 0
     * caughtSpeeding(65, false) → 1
     * caughtSpeeding(65, true) → 0
     */
    public int caughtSpeeding(int speed, boolean isBirthday) {
        if (isBirthday) {
            speed -= 5; // Если это ваш день рождения
        }
        if (speed <= 60) {
            return 0;
        } else if (speed <= 80) {
            return 1;
        } else {
            return 2;
        }
    }

    /**
     * Число 6 — действительно большое число.
     * При наличии двух значений int, a и b, вернуть true, если хотя бы одно из них равно 6.
     * Или если их сумма или разность равна 6.
     * Примечание: функция Math.abs(num) вычисляет абсолютное значение числа.
     * love6(6, 4) → true
     * love6(4, 5) → false
     * love6(1, 5) → true
     */
    public boolean love6(int a, int b) {
        return a == 6 || b == 6 || Math.abs(a - b) == 6 || a + b == 6;
    }

    /**
     *Возвращает значение true, если заданное неотрицательное число на 1 или 2 больше, чем кратное 20.
     * more20(20) → ложь
     * more20(21) → правда
     * more20(22) → правда
     */
    public boolean more20(int n) {
        return (n % 20) == 1 || (n % 20) == 2;
    }


    /**
     * Дано неотрицательное число "num", вернуть true, если num находится в пределах 2 от кратного 10.
     * Примечание: (a % b) — это остаток от деления a на b, поэтому (7 % 5) равно 2.
     * nearTen(12) → true
     * nearTen(17) → false
     * nearTen(19) → true
     */
    public boolean nearTen(int num) {
        return (num % 10) <= 2 || (num % 10) >= 8;
    }

    /**
     * У нас вечеринка с количеством чая и конфет.
     * Верните целочисленный результат вечеринки, закодированный как 0=плохо, 1=хорошо или 2=отлично.
     * Вечеринка хороша (1), если и чая, и конфет не менее 5.
     * Однако, если количество чая или конфет не менее чем вдвое больше, вечеринка отличная (2).
     * Однако во всех случаях, если количество чая или конфет меньше 5, вечеринка всегда плохая (0).
     * teaParty(6, 8) → 1
     * teaParty(3, 8) → 0
     * teaParty(20, 6) → 2
     */
    public int teaParty(int tea, int candy) {
        if (tea < 5 || candy < 5) {
            return 0; // bad
        } else if (tea >= 2 * candy || candy >= 2 * tea) {
            return 2; // great
        } else {
            return 1; // good
        }
    }

    /**
     * Даны три целых числа, abc, возвращает true, если возможно сложить два целых числа, чтобы получить третье.
     * twoAsOne(1, 2, 3) → true
     * twoAsOne(3, 1, 2) → true
     * twoAsOne(3, 2, 2) → false
     */
    public boolean twoAsOne(int a, int b, int c) {
        return (a + b == c) || (a + c == b) || (b + c == a);
    }

    /**
     * Даны три целых числа, abc, возвращают true, если два или более из них имеют одинаковую крайнюю правую цифру.
     * Целые числа неотрицательны.
     * Примечание: оператор % "mod" вычисляет остаток, например, 17 % 10 равно 7.
     * lastDigit(23, 19, 13) → true
     * lastDigit(23, 19, 12) → false
     * lastDigit(23, 19, 3) → true
     */
    public boolean lastDigit(int a, int b, int c) {
        return (a % 10 == b % 10) || (a % 10 == c % 10) || (b % 10 == c % 10);
    }

    /**
     * При наличии двух значений int вернуть большее значение.
     * Однако если два значения дают одинаковый остаток при делении на 5, то вернуть меньшее значение.
     * Однако во всех случаях, если два значения одинаковы, вернуть 0.
     * Примечание: оператор % "mod" вычисляет остаток, например, 7 % 5 равно 2.
     * maxMod5(2, 3) → 3
     * maxMod5(6, 2) → 6
     * maxMod5(3, 2) → 3
     */
    public int maxMod5(int a, int b) {
        if (a == b) {
            return 0;
        } else if (a % 5 == b % 5) {
            return Math.min(a, b);
        } else {
            return Math.max(a, b);
        }
    }

    /**
     * У вас есть синий лотерейный билет с целыми числами a, b и c.
     * Это дает три пары, которые мы назовем ab, bc и ac.
     * Рассмотрим сумму чисел в каждой паре.
     * Если сумма любой пары равна точно 10, результат равен 10.
     * В противном случае, если сумма ab ровно на 10 больше, чем сумма bc или ac, результат равен 5.
     * В противном случае результат равен 0.
     * blueTicket(9, 1, 0) → 10
     * blueTicket(9, 2, 0) → 0
     * blueTicket(6, 1, 4) → 10
     */
    public int blueTicket(int a, int b, int c) {
        int abSum = a + b;
        int bcSum = b + c;
        int acSum = a + c;

        if (abSum == 10 || bcSum == 10 || acSum == 10) {
            return 10;
        } else if (abSum == bcSum + 10 || abSum == acSum + 10) {
            return 5;
        } else {
            return 0;
        }
    }

    /**
     *
     Вы и ваш спутник пытаетесь получить столик в ресторане.
     Параметр «you» — это стильность вашей одежды в диапазоне от 0 до 10, а «date» — это стильность одежды вашего спутника.
     Результат получения стола кодируется как значение int, где 0=нет, 1=может быть, 2=да.
     Если кто-то из вас очень стильный, 8 или больше, то результат равен 2 (да).
     За исключением того, что если у кого-то из вас стиль равен 2 или меньше, то результат равен 0 (нет).
     В противном случае результат равен 1 (может быть).

     dateFashion(5, 10) → 2
     dateFashion(5, 2) → 0
     dateFashion(5, 5) → 1
     */
    public int dateFashion(int you, int date) {
        if (you <= 2 || date <= 2) {
            return 0; // no
        } else if (you >= 8 || date >= 8) {
            return 2; // yes
        } else {
            return 1; // maybe
        }
    }

}
